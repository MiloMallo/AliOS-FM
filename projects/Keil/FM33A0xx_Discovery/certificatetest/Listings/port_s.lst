


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ***********************
    2 00000000         ;                            EXTERN PARAMETERS
    3 00000000         ;*******************************************************
                       ***********************
    4 00000000         
    5 00000000                 IMPORT           g_active_task
    6 00000000                 IMPORT           g_preferred_ready_task
    7 00000000                 IMPORT           krhino_stack_ovf_check
    8 00000000         
    9 00000000         ;*******************************************************
                       ***********************
   10 00000000         ;                            EXPORT FUNCTIONS
   11 00000000         ;*******************************************************
                       ***********************
   12 00000000         
   13 00000000                 EXPORT           cpu_intrpt_save
   14 00000000                 EXPORT           cpu_intrpt_restore
   15 00000000                 EXPORT           cpu_task_switch
   16 00000000                 EXPORT           cpu_intrpt_switch
   17 00000000                 EXPORT           cpu_first_task_start
   18 00000000         
   19 00000000                 EXPORT           PendSV_Handler
   20 00000000         
   21 00000000         ;*******************************************************
                       ***********************
   22 00000000         ;                                 EQUATES
   23 00000000         ;*******************************************************
                       ***********************
   24 00000000         
   25 00000000 E000ED04 
                       SCB_ICSR
                               EQU              0xE000ED04  ; Interrupt Control
                                                             and State Register
                                                            .
   26 00000000 10000000 
                       ICSR_PENDSVSET
                               EQU              0x10000000  ; Value to trigger 
                                                            PendSV exception.
   27 00000000         
   28 00000000 E000ED20 
                       SHPR3_PRI_14_15
                               EQU              0xE000ED20  ; System Handler Pr
                                                            iority Register 3 (
                                                            PendSV + SysTick).
   29 00000000 C0C00000 
                       SHPR3_PRI_LVL
                               EQU              0xC0C00000  ; PendSV + SysTick 
                                                            priority level (low
                                                            est).
   30 00000000         
   31 00000000         ;*******************************************************
                       ***********************
   32 00000000         ;                        CODE GENERATION DIRECTIVES
   33 00000000         ;*******************************************************
                       ***********************
   34 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   35 00000000                 THUMB



ARM Macro Assembler    Page 2 


   36 00000000                 REQUIRE8
   37 00000000                 PRESERVE8
   38 00000000         
   39 00000000         ;*******************************************************
                       ***********************
   40 00000000         ; Functions:
   41 00000000         ;     size_t cpu_intrpt_save(void);
   42 00000000         ;     void cpu_intrpt_restore(size_t cpsr);
   43 00000000         ;*******************************************************
                       ***********************
   44 00000000         cpu_intrpt_save
   45 00000000 F3EF 8010       MRS              R0, PRIMASK
   46 00000004 B672            CPSID            I
   47 00000006 4770            BX               LR
   48 00000008         
   49 00000008         cpu_intrpt_restore
   50 00000008 F380 8810       MSR              PRIMASK, R0
   51 0000000C 4770            BX               LR
   52 0000000E         
   53 0000000E         ;*******************************************************
                       ***********************
   54 0000000E         ; Functions:
   55 0000000E         ;     void cpu_intrpt_switch(void);
   56 0000000E         ;     void cpu_task_switch(void);
   57 0000000E         ;*******************************************************
                       ***********************
   58 0000000E         cpu_task_switch
   59 0000000E 4821            LDR              R0, =SCB_ICSR
   60 00000010 4921            LDR              R1, =ICSR_PENDSVSET
   61 00000012 6001            STR              R1, [R0]
   62 00000014 4770            BX               LR
   63 00000016         
   64 00000016         cpu_intrpt_switch
   65 00000016 481F            LDR              R0, =SCB_ICSR
   66 00000018 491F            LDR              R1, =ICSR_PENDSVSET
   67 0000001A 6001            STR              R1, [R0]
   68 0000001C 4770            BX               LR
   69 0000001E         
   70 0000001E         ;*******************************************************
                       ***********************
   71 0000001E         ; Functions:
   72 0000001E         ;     void cpu_first_task_start(void);
   73 0000001E         ;*******************************************************
                       ***********************
   74 0000001E         cpu_first_task_start
   75 0000001E         ;set PendSV prority to the lowest
   76 0000001E 481F            LDR              R0, =SHPR3_PRI_14_15
   77 00000020 6802            LDR              R2, [R0]
   78 00000022 491F            LDR              R1, =SHPR3_PRI_LVL
   79 00000024 430A            ORRS             R2, R1
   80 00000026 6002            STR              R2, [R0]
   81 00000028         
   82 00000028         ;indicate PendSV_Handler branch to _pendsv_handler_nosav
                       e
   83 00000028 2000            MOVS             R0, #0
   84 0000002A F380 8809       MSR              PSP, R0
   85 0000002E         
   86 0000002E         ;align MSP to 8 byte
   87 0000002E F3EF 8008       MRS              R0, MSP



ARM Macro Assembler    Page 3 


   88 00000032 08C0            LSRS             R0, R0, #3
   89 00000034 00C0            LSLS             R0, R0, #3
   90 00000036 F380 8808       MSR              MSP, R0
   91 0000003A         
   92 0000003A         ;make PendSV exception pending
   93 0000003A 4816            LDR              R0, =SCB_ICSR
   94 0000003C 4916            LDR              R1, =ICSR_PENDSVSET
   95 0000003E 6001            STR              R1, [R0]
   96 00000040         
   97 00000040         ;goto PendSV_Handler
   98 00000040 B662            CPSIE            I
   99 00000042 E7FE            B                .
  100 00000044         
  101 00000044         ;*******************************************************
                       ***********************
  102 00000044         ; Functions:
  103 00000044         ;     void krhino_pendsv_handler(void);
  104 00000044         ;*******************************************************
                       ***********************
  105 00000044         PendSV_Handler
  106 00000044 B672            CPSID            I
  107 00000046 F3EF 8009       MRS              R0, PSP
  108 0000004A 2800            CMP              R0, #0
  109 0000004C         ;branch if cpu_first_task_start
  110 0000004C D00E            BEQ              _pendsv_handler_nosave
  111 0000004E         
  112 0000004E         ;hardware saved R0~R3,R12,LR,PC,xPSR
  113 0000004E         
  114 0000004E         ;save context
  115 0000004E 3820            SUBS             R0, R0, #0x20
  116 00000050 C0F0            STMIA            R0!, {R4 - R7}
  117 00000052 4644            MOV              R4, R8
  118 00000054 464D            MOV              R5, R9
  119 00000056 4656            MOV              R6, R10
  120 00000058 465F            MOV              R7, R11
  121 0000005A C0F0            STMIA            R0!, {R4 - R7}
  122 0000005C         
  123 0000005C         ;g_active_task->task_stack = context region
  124 0000005C 3820            SUBS             R0, R0, #0x20
  125 0000005E 4911            LDR              R1, =g_active_task
  126 00000060 6809            LDR              R1, [R1]
  127 00000062 6008            STR              R0, [R1]
  128 00000064         
  129 00000064         ;save and restore LR
  130 00000064 4674            MOV              R4, LR
  131 00000066 F7FF FFFE       bl               krhino_stack_ovf_check
  132 0000006A 46A6            MOV              LR, R4
  133 0000006C         
  134 0000006C         _pendsv_handler_nosave
  135 0000006C 480D            LDR              R0, =g_active_task
  136 0000006E 490E            LDR              R1, =g_preferred_ready_task
  137 00000070 680A            LDR              R2, [R1]
  138 00000072 6002            STR              R2, [R0]
  139 00000074         ;R0 = g_active_task->task_stack = context region
  140 00000074 6810            LDR              R0, [R2]
  141 00000076         
  142 00000076         ;restore context
  143 00000076 C8F0            LDMIA            R0!, {R4 - R7}
  144 00000078 C80C            LDMIA            R0!, {R2 - R3}



ARM Macro Assembler    Page 4 


  145 0000007A 4690            MOV              R8,  R2
  146 0000007C 4699            MOV              R9,  R3
  147 0000007E C80C            LDMIA            R0!, {R2 - R3}
  148 00000080 4692            MOV              R10,  R2
  149 00000082 469B            MOV              R11,  R3
  150 00000084         
  151 00000084         ;return stack = PSP
  152 00000084 F380 8809       MSR              PSP, R0
  153 00000088         
  154 00000088         ;after exception return: stack = PSP
  155 00000088 4670            MOV              R0, LR
  156 0000008A 2104            MOVS             R1, #0x04
  157 0000008C 4308            ORRS             R0, R1
  158 0000008E 4686            MOV              LR, R0
  159 00000090 B662            CPSIE            I
  160 00000092         ;hardware restore R0~R3,R12,LR,PC,xPSR
  161 00000092 4770            BX               LR
  162 00000094         
  163 00000094                 ALIGN
  164 00000094                 END
              E000ED04 
              10000000 
              E000ED20 
              C0C00000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M0 --apcs=interw
ork --depend=.\objects\port_s.d -o.\objects\port_s.o -IC:\Users\Administrator\D
esktop\AliOS-FM\projects\Keil\FM33A0xx_Discovery\certificatetest\RTE -ID:\Keil_
v5\ARM\PACK\Keil\FM33A0XX_DFP\0.2.02\Device\Include -ID:\Keil_v5\ARM\CMSIS\Incl
ude --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VERSION SETA 517" --
list=.\listings\port_s.lst ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s
.S



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 34 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.S
   Uses
      None
Comment: .text unused
PendSV_Handler 00000044

Symbol: PendSV_Handler
   Definitions
      At line 105 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.
S
   Uses
      At line 19 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.S
Comment: PendSV_Handler used once
_pendsv_handler_nosave 0000006C

Symbol: _pendsv_handler_nosave
   Definitions
      At line 134 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.
S
   Uses
      At line 110 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.
S
Comment: _pendsv_handler_nosave used once
cpu_first_task_start 0000001E

Symbol: cpu_first_task_start
   Definitions
      At line 74 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.S
   Uses
      At line 17 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.S
Comment: cpu_first_task_start used once
cpu_intrpt_restore 00000008

Symbol: cpu_intrpt_restore
   Definitions
      At line 49 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.S
   Uses
      At line 14 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.S
Comment: cpu_intrpt_restore used once
cpu_intrpt_save 00000000

Symbol: cpu_intrpt_save
   Definitions
      At line 44 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.S
   Uses
      At line 13 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.S
Comment: cpu_intrpt_save used once
cpu_intrpt_switch 00000016

Symbol: cpu_intrpt_switch
   Definitions
      At line 64 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.S
   Uses
      At line 16 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.S
Comment: cpu_intrpt_switch used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

cpu_task_switch 0000000E

Symbol: cpu_task_switch
   Definitions
      At line 58 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.S
   Uses
      At line 15 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.S
Comment: cpu_task_switch used once
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ICSR_PENDSVSET 10000000

Symbol: ICSR_PENDSVSET
   Definitions
      At line 26 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.S
   Uses
      At line 60 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.S
      At line 66 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.S
      At line 94 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.S

SCB_ICSR E000ED04

Symbol: SCB_ICSR
   Definitions
      At line 25 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.S
   Uses
      At line 59 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.S
      At line 65 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.S
      At line 93 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.S

SHPR3_PRI_14_15 E000ED20

Symbol: SHPR3_PRI_14_15
   Definitions
      At line 28 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.S
   Uses
      At line 76 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.S
Comment: SHPR3_PRI_14_15 used once
SHPR3_PRI_LVL C0C00000

Symbol: SHPR3_PRI_LVL
   Definitions
      At line 29 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.S
   Uses
      At line 78 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.S
Comment: SHPR3_PRI_LVL used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

g_active_task 00000000

Symbol: g_active_task
   Definitions
      At line 5 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.S
   Uses
      At line 125 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.
S
      At line 135 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.
S

g_preferred_ready_task 00000000

Symbol: g_preferred_ready_task
   Definitions
      At line 6 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.S
   Uses
      At line 136 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.
S
Comment: g_preferred_ready_task used once
krhino_stack_ovf_check 00000000

Symbol: krhino_stack_ovf_check
   Definitions
      At line 7 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.S
   Uses
      At line 131 in file ..\..\..\..\platform\arch\arm\armv6m\armcc\m0\port_s.
S
Comment: krhino_stack_ovf_check used once
3 symbols
349 symbols in table
